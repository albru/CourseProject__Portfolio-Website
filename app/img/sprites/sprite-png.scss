// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$quotes-name: 'quotes';
$quotes-x: 572px;
$quotes-y: 348px;
$quotes-offset-x: -572px;
$quotes-offset-y: -348px;
$quotes-width: 33px;
$quotes-height: 29px;
$quotes-total-width: 1176px;
$quotes-total-height: 436px;
$quotes-image: 'app/img/sprites/';
$quotes: (572px, 348px, -572px, -348px, 33px, 29px, 1176px, 436px, 'app/img/sprites/', 'quotes', );
$works-about-name: 'works-about';
$works-about-x: 0px;
$works-about-y: 348px;
$works-about-offset-x: 0px;
$works-about-offset-y: -348px;
$works-about-width: 249px;
$works-about-height: 88px;
$works-about-total-width: 1176px;
$works-about-total-height: 436px;
$works-about-image: 'app/img/sprites/';
$works-about: (0px, 348px, 0px, -348px, 249px, 88px, 1176px, 436px, 'app/img/sprites/', 'works-about', );
$works-header-name: 'works-header';
$works-header-x: 284px;
$works-header-y: 348px;
$works-header-offset-x: -284px;
$works-header-offset-y: -348px;
$works-header-width: 253px;
$works-header-height: 83px;
$works-header-total-width: 1176px;
$works-header-total-height: 436px;
$works-header-image: 'app/img/sprites/';
$works-header: (284px, 348px, -284px, -348px, 253px, 83px, 1176px, 436px, 'app/img/sprites/', 'works-header', );
$works-portfolio-name: 'works-portfolio';
$works-portfolio-x: 0px;
$works-portfolio-y: 0px;
$works-portfolio-offset-x: 0px;
$works-portfolio-offset-y: 0px;
$works-portfolio-width: 1176px;
$works-portfolio-height: 313px;
$works-portfolio-total-width: 1176px;
$works-portfolio-total-height: 436px;
$works-portfolio-image: 'app/img/sprites/';
$works-portfolio: (0px, 0px, 0px, 0px, 1176px, 313px, 1176px, 436px, 'app/img/sprites/', 'works-portfolio', );
$spritesheet-width: 1176px;
$spritesheet-height: 436px;
$spritesheet-image: 'app/img/sprites/';
$spritesheet-sprites: ($quotes, $works-about, $works-header, $works-portfolio, );
$spritesheet: (1176px, 436px, 'app/img/sprites/', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
